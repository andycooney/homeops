---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: qbtools
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: qbittorrent
      namespace: default
  values:
    controllers:
      main:
        type: cronjob
        cronjob:
          schedule: "@hourly"
          timeZone: &timeZone America/New_York
        initContainers:
          tagging:
            image: &image
              repository: ghcr.io/qlonik/qbtools
              tag: master@sha256:12a933ec6116f36b53489f5dc419a338d348e1158a7f3710dcda089a58521635
            env: &env
              TZ: *timeZone
            args: [
              "tagging",
              "--added-on",
              "--expired",
              "--last-activity",
              "--sites",
              "--unregistered",
              "--server", "qbittorrent.default.svc.cluster.local",
              "--port", "80",
              "--config", "/config/config.yaml"
            ]
            resources: &resources
              requests:
                cpu: 25m
                memory: 128M
              limits:
                memory: 256M
        containers:
          unregistered:
            image: *image
            env: *env
            args: [
              "prune",
              "--exclude-category", "manual",
              "--exclude-category", "music.collection",
              "--exclude-category", "music.import",
              "--include-tag", "unregistered",
              "--dry-run",
              "--server", "qbittorrent.default.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
          expired:
            image: *image
            env: *env
            args: [
              "prune",
              "--exclude-category", "manual",
              "--exclude-category", "music.collection",
              "--exclude-category", "music.import",
              "--exclude-category", "overlord",
              "--include-tag", "expired", # defined in config.yaml
              "--include-tag", "added:7d",
              "--dry-run",
              "--server", "qbittorrent.default.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: &securityContext
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
      orphaned:
        type: cronjob
        cronjob:
          schedule: "@daily"
          timeZone: *timeZone
        containers:
          main:
            image: *image
            env: *env
            args: [
              "orphaned",
              "--exclude-pattern", "*_unpackerred",
              "--exclude-pattern", "*/manual/*",
              "--exclude-pattern", "*/music.import/*",
              "--dry-run",
              "--server", "qbittorrent.default.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
        pod:
          restartPolicy: OnFailure
          securityContext: *securityContext
      reannounce:
        containers:
          main:
            image: *image
            env: *env
            args: [
              "reannounce",
              "--process-seeding",
              "--server", "qbittorrent.default.svc.cluster.local",
              "--port", "80"
            ]
            resources: *resources
        pod:
          securityContext: *securityContext
    service:
      main:
        enabled: false
    persistence:
      config-file:
        type: configMap
        name: qbtools-configmap
        advancedMounts:
          main:
            tagging:
              - path: /config/config.yaml
                subPath: config.yaml
                readOnly: true
      media:
        type: nfs
        server: expanse.turbo.ac
        path: /eros/Media
        advancedMounts:
          orphaned:
            main:
              - path: /media
