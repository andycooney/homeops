{
  "extends": [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    "docker:enableMajor",
    ":enablePreCommit",
    "github>onedr0p/home-ops//.github/renovate/allowedVersions.json5",
    "github>onedr0p/home-ops//.github/renovate/autoMerge.json5",
    "github>onedr0p/home-ops//.github/renovate/group.json5",
    "github>onedr0p/home-ops//.github/renovate/labels.json5",
    "github>onedr0p/home-ops//.github/renovate/semanticCommits.json5"
  ],
  "platform": "github",
  "username": "rosey-bot[bot]",
  "repositories": ["onedr0p/home-ops"],
  "onboarding": false,
  "requireConfig": false,
  "gitAuthor": "rosey-bot <98030736+rosey-bot[bot]@users.noreply.github.com>",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "commitBodyTable": true,
  "ignoreDeps": [
    "ghcr.io/fluxcd/helm-controller",
    "ghcr.io/fluxcd/image-automation-controller",
    "ghcr.io/fluxcd/image-reflector-controller",
    "ghcr.io/fluxcd/kustomize-controller",
    "ghcr.io/fluxcd/notification-controller",
    "ghcr.io/fluxcd/source-controller"
  ],
  "docker-compose": {
    "fileMatch": ["ansible/.+/docker-compose.*\\.ya?ml(\\.j2)?$"]
  },
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "regexManagers": [
    {
      "description": "Process 'thing_version:', 'thing_version=' dependencies and kustomizations with urls that contain versions from Github download URLs",
      "fileMatch": [
        "cluster/.+\\.ya?ml$",
        "ansible/.+\\.ya?ml$",
        "hack/.+\\.sh$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?: \"(?<currentValue>.*)\"",
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?=\"(?<currentValue>.*)\"",
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?https.*?(?<currentValue>v?\\d+\\.\\d+\\.\\d+)"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    {
      "description": "Kube Prometheus Stack CRDs",
      "fileMatch": ["cluster/crds/.+\\.ya?ml$"],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n.*?: \"(?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\""
      ],
      "datasourceTemplate": "helm"
    }
  ],
  "packageRules": [
    {
      "description": "Use custom regex versioning for frigate image",
      "matchDatasources": ["docker"],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$",
      "matchPackageNames": ["docker.io/blakeblackshear/frigate"]
    },
    {
      "description": "Use loose versioning for certain dependencies",
      "matchDatasources": ["docker", "github-releases"],
      "versioning": "loose",
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/qbittorrent",
        "Hypfer/Valetudo"
      ]
    }
  ]
}
