---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Flux Helm Repository Sync"

on:
  workflow_dispatch:
    inputs:
      clusterName:
        description: Cluster Name
        default: main
        required: true
      helmRepoNamespace:
        description: Helm Repository Namespace
        default: flux-system
        required: true
      helmRepoName:
        description: Helm Repository Name
        required: true
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**/helmrelease.yaml"]

env:
  AQUA_GLOBAL_CONFIG: .github/aqua.yaml

jobs:
  sync:
    name: Flux Helm Repository Sync
    runs-on: ["arc-runner-set-home-ops"]
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@v1.6.2
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0

      - name: Install System Tools
        shell: bash
        run: sudo apt-get -qq update && sudo apt-get -qq install --no-install-recommends -y curl git jo

      - name: Cache Aqua
        uses: actions/cache@v3.3.2
        with:
          path: ~/.local/share/aquaproj-aqua
          key: aqua-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('.github/aqua.yaml') }}
          restore-keys: aqua-${{ runner.os }}-${{ runner.arch }}-

      - name: Install Aqua and CLI Tools
        uses: aquaproj/aqua-installer@v2.2.0
        with:
          aqua_version: v2.21.3
          aqua_opts: -a
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@v1.2.4
        with:
          encodedString: "${{ secrets.KUBECONFIG }}"
          fileName: kubeconfig

      - if: ${{ github.event.inputs.clusterName == '' && github.event.inputs.helmRepoNamespace == '' && github.event.inputs.helmRepoName == '' }}
        name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v40.2.3
        with:
          files: kubernetes/**/helmrelease.yaml

      - if: ${{ github.event.inputs.clusterName == '' && github.event.inputs.helmRepoNamespace == '' && github.event.inputs.helmRepoName == '' }}
        name: Sync Helm Repository
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          declare -a repos=()
          for f in ${{ steps.changed-files.outputs.all_changed_and_modified_files }}; do
              cluster_name=$(echo "${f}" | awk -F'/' '{print $2}')
              repo_namespace="$(yq -r '.spec.chart.spec.sourceRef.namespace' "${f}")"
              repo_name="$(yq -r '.spec.chart.spec.sourceRef.name' "${f}")"
              repos+=("${cluster_name}:${repo_namespace}:${repo_name}")
          done
          mapfile -t repos < <(printf "%s\n" "${repos[@]}" | sort -u)
          for r in "${repos[@]}"; do
              IFS=':' read -r cluster_name repo_namespace repo_name <<< "${r}"
              flux \
                  --context ${cluster_name} \
                  --namespace ${repo_namespace} \
                  reconcile source helm ${repo_name}
          done

      - if: ${{ github.event.inputs.clusterName != '' && github.event.inputs.helmRepoNamespace != '' && github.event.inputs.helmRepoName != '' }}
        name: Sync Helm Repository
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        shell: bash
        run: |
          flux \
              --context ${{ github.event.inputs.clusterName }} \
              --namespace ${{ github.event.inputs.helmRepoNamespace }} \
              reconcile source helm ${{ github.event.inputs.helmRepoName }}
