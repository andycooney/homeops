---
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: pmb-operator
  annotations:
    policies.kyverno.io/title: pmb-operator
    policies.kyverno.io/subject: Deployment
    policies.kyverno.io/description: >-
      This policy generates a backup CronJob for Deployments
      with the 'pmb.home.arpa/backup-claim' label
spec:
  generateExistingOnPolicyUpdate: true
  mutateExistingOnPolicyUpdate: true
  rules:
    - name: create-cronjob
      match:
        any:
          - resources:
              kinds:
                - Deployment
              selector:
                matchLabels:
                  pmb.home.arpa/backup-claim: "*"
      context:
        - name: appName
          variable:
            jmesPath: request.object.metadata.name
        - name: claimName
          variable:
            jmesPath: request.object.metadata.labels."pmb.home.arpa/backup-claim"
      generate:
        synchronize: true
        apiVersion: batch/v1
        kind: CronJob
        name: "{{ appName }}-backup"
        namespace: "{{ request.object.metadata.namespace }}"
        data:
          metadata:
            ownerReferences:
              - apiVersion: "{{ request.object.apiVersion }}"
                kind: "{{ request.object.kind }}"
                name: "{{ request.object.metadata.name }}"
                uid: "{{ request.object.metadata.uid }}"
          spec:
            schedule: "@daily"
            concurrencyPolicy: Forbid
            successfulJobsHistoryLimit: 1
            failedJobsHistoryLimit: 2
            jobTemplate:
              spec:
                ttlSecondsAfterFinished: 86400
                template:
                  spec:
                    automountServiceAccountToken: false
                    restartPolicy: OnFailure
                    containers:
                      - name: backup
                        image: ghcr.io/onedr0p/kopia:0.11.3@sha256:2ae9ede0edac68c09d517abd71fa12c96efcf19f27ce7ffca968cebb10ed0e2d
                        env:
                          - name: APP
                            value: "{{ appName }}"
                          - name: BACKUP_DIR
                            value: /data/backups/\$(APP)
                          - name: KOPIA_CACHE_DIRECTORY
                            value: \$(BACKUP_DIR)/cache
                          - name: KOPIA_LOG_DIR
                            value: \$(BACKUP_DIR)/logs
                          - name: KOPIA_PASSWORD
                            value: "none"
                        command:
                          - /bin/bash
                          - -c
                          - |-
                            printf "\e[1;32m%-6s\e[m\n" "[01/10] Set up dirs ..."          && mkdir -p "\$(BACKUP_DIR)"/{cache,logs,repo}
                            printf "\e[1;32m%-6s\e[m\n" "[02/10] Create repo ..."          && [[ ! -f "\$(BACKUP_DIR)/repo/kopia.repository.f" ]] && kopia repository create filesystem --path="\$(BACKUP_DIR)/repo"
                            printf "\e[1;32m%-6s\e[m\n" "[03/10] Connect to repo ..."      && kopia repo connect filesystem --path="\$(BACKUP_DIR)/repo" --override-hostname=cluster --override-username=cronjob
                            printf "\e[1;32m%-6s\e[m\n" "[04/10] Set policies ..."         && kopia policy set "\$(BACKUP_DIR)/repo" --compression=zstd --keep-latest 14 --keep-hourly 0 --keep-daily 7 --keep-weekly 2 --keep-monthly 0 --keep-annual 0
                            printf "\e[1;32m%-6s\e[m\n" "[05/10] Freeze config vol ..."    && fsfreeze --freeze /data/config
                            printf "\e[1;32m%-6s\e[m\n" "[06/10] Back up config vol ..."   && kopia snap create /data/config
                            printf "\e[1;32m%-6s\e[m\n" "[07/10] Unfreeze config vol ..."  && fsfreeze --unfreeze /data/config
                            printf "\e[1;32m%-6s\e[m\n" "[08/10] List snaps ..."           && kopia snap list
                            printf "\e[1;32m%-6s\e[m\n" "[09/10] Show stats ..."           && kopia content stats
                            printf "\e[1;32m%-6s\e[m\n" "[10/10] Disconnect from repo ..." && kopia repo disconnect
                        volumeMounts:
                          - name: config
                            mountPath: /data/config
                          - name: backups
                            mountPath: /data/backups
                        securityContext:
                          privileged: true
                    volumes:
                      - name: config
                        persistentVolumeClaim:
                          claimName: "{{ claimName }}"
                      - name: backups
                        nfs:
                          server: "expanse.${SECRET_PRIVATE_DOMAIN}"
                          path: /tycho/Apps/External/Backups
                    affinity:
                      podAffinity:
                        requiredDuringSchedulingIgnoredDuringExecution:
                          - labelSelector:
                              matchExpressions: "{{ items(request.object.spec.selector.matchLabels, 'key', 'value')[].{key: key, operator: 'In', values: [value] } }}"
                            topologyKey: kubernetes.io/hostname
