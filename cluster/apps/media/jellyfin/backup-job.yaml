---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: &name jellyfin-backup
  namespace: media
spec:
  schedule: "@daily"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      ttlSecondsAfterFinished: 86400
      template:
        spec:
          automountServiceAccountToken: false
          restartPolicy: OnFailure
          containers:
            - name: backup
              image: ghcr.io/onedr0p/kopia:0.11.3@sha256:54df58c5c138d5ace220eaee09ccf83809c101287f0b0cf7908f607d6de31820
              env:
                - name: KOPIA_PASSWORD
                  value: *name
                - name: KOPIA_CACHE_DIRECTORY
                  value: /mnt/backup/cache
                - name: KOPIA_LOG_DIR
                  value: /mnt/backup/logs
                - name: KOPIA_CHECK_FOR_UPDATES
                  value: "false"
              command:
                - /bin/bash
                - -c
                - |-
                  mkdir -p /mnt/backup/{cache,logs,repo}
                  kopia repository create filesystem --path=/mnt/backup/repo
                  kopia policy set --global --keep-weekly 52 --keep-daily 30 --keep-latest 5
                  kopia policy set --global --compression=zstd
                  kopia repository connect filesystem --path=/mnt/backup/repo --override-hostname=cluster --override-username=cronjob
                  fsfreeze --freeze /mnt/config
                  kopia snapshot create /mnt/config
                  fsfreeze --unfreeze /mnt/config
                  kopia snapshot list
                  kopia content stats
                  kopia repository disconnect
              volumeMounts:
                - name: config
                  mountPath: /mnt/config
                - name: backup
                  mountPath: /mnt/backup
              securityContext:
                privileged: true
          volumes:
            - name: config
              persistentVolumeClaim:
                claimName: jellyfin-config-v1
            - name: backup
              nfs:
                server: "expanse.${SECRET_PRIVATE_DOMAIN}"
                path: /tycho/Apps/External/Backups/jellyfin
          affinity:
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: app.kubernetes.io/name
                        operator: In
                        values:
                          - jellyfin
                  topologyKey: kubernetes.io/hostname
