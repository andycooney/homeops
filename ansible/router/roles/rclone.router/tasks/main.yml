---
- name: Create Rclone directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - /usr/local/etc/rclone

- name: Create Rclone config
  ansible.builtin.template:
    src: rclone.conf.j2
    dest: /usr/local/etc/rclone/rclone.conf
    mode: 0755

- name: Get the latest Rclone tag
  ansible.builtin.shell:
    cmd: curl --silent 'https://api.github.com/repos/rclone/rclone/releases/latest' |  grep '"tag_name":' | cut -d'"' -f4
  register: rclone_latest

- name: Remove Rclone install files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/rclone-{{ rclone_latest.stdout }}-freebsd-amd64"
    - /tmp/rclone-freebsd-amd64.zip


- name: Download Rclone
  ansible.builtin.get_url:
    url: "https://github.com/rclone/rclone/releases/download/{{ rclone_latest.stdout }}/rclone-{{ rclone_latest.stdout }}-freebsd-amd64.zip"
    dest: /tmp/rclone-freebsd-amd64.zip

- name: Unzip Rclone
  ansible.builtin.shell:
    cmd: unzip /tmp/rclone-freebsd-amd64.zip -d /tmp

- name: Install Rclone
  ansible.builtin.copy:
    src: "/tmp/rclone-{{ rclone_latest.stdout }}-freebsd-amd64/rclone"
    dest: /usr/local/sbin/rclone
    mode: 0755
    remote_src: true

- name: Create Rclone cron job
  ansible.builtin.template:
    src: rclone-conf-backup.cron.j2
    dest: /usr/local/etc/cron.d/rclone-conf-backup.cron
    mode: 0644
